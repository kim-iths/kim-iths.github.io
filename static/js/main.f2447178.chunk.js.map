{"version":3,"sources":["components/GetData.js","components/StartScreen.jsx","features/cart.js","components/Filminfo.jsx","components/Checkout.jsx","components/FilmCategory.jsx","components/SearchMovies.jsx","components/UpcomingMovies.jsx","components/KidsMovies.jsx","components/Receipt.jsx","components/Modal.jsx","App.js","reportWebVitals.js","features/rootReducer.js","index.js"],"names":["GetData","url","a","fetch","resp","console","log","json","data","StartScreen","useState","newMovies","setNewMovies","popularMovies","setPopularMovies","slides","setSlides","currentPage","setCurrentPage","totalPages","setTotalPages","useEffect","window","scrollTo","results","total_pages","slide","map","newMovie","index","className","to","id","style","textDecoration","src","backdrop_path","alt","title","createSlides","length","autoplay","interval","popularMovie","poster_path","onClick","IconButton","aria-label","fill","addToCart","createAction","removeFromCart","resetCount","actions","STATUS","reducer","createReducer","status","movies","count","price","total","email","state","action","find","cartItem","payload","image","found","filter","Filminfo","useSelector","cart","buttonPressed","setButtonPressed","dispatch","useDispatch","alert","useAlert","show","showAlert","params","useParams","movieId","loaded","setLoaded","setId","year","playtime","overview","bannerImage","cast","genres","similarMovies","info","setInfo","creditsUrl","similarUrl","creditsData","similarData","release_date","runtime","synopsis","posterImage","amountSimilarMovies","elements","i","currentTitle","currentImage","push","castString","amountActors","name","substring","hours","Math","floor","genresString","forEach","e","Checkout","cartElements","movie","isValid","setIsValid","message","setMessage","disableButton","setDisableButton","setEmail","emailRegex","RegExp","type","placeholder","onChange","event","target","value","test","disabled","FilmCategory","categoryList","setCategoryList","pageNumber","setPageNumber","categoryId","setCategoryId","loadCategory","genreId","categoryMovies","moviesCategoryList","category","SearchMovies","queryText","query","setQuery","page","search","setSearch","document","querySelector","response","movieElements","currentPoster","innerText","UpcomingMovies","upcomingMovies","setUpcomingMovies","loadUpcomingMovies","upcomingMoviesList","upcoming","KidsMovies","kidscategoryList","setKidsCategoryList","kidspageNumber","setKidsPageNumber","kidscategoryId","loadKidsCategory","kidscategoryMovies","kidsmoviesCategoryList","Receipt","Modal","open","onClose","modalElements","ReactDom","createPortal","classname","getElementById","App","isOpen","setIsOpen","hidden","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","cartReducer","store","configureStore","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate"],"mappings":"qcAiBeA,EAhBF,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAGKC,MAAMF,GAHX,cAGRG,EAHQ,OAIZC,QAAQC,IAAI,kBAAmBF,GAJnB,SAKKA,EAAKG,OALV,cAKRC,EALQ,OAMZH,QAAQC,IAAI,cAAeE,GANf,kBAQLA,GARK,kCAWZH,QAAQC,IAAR,MAXY,0DAAH,sD,iDCwGEG,EA/FK,WAEhB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAoCA,OAlCAC,oBAAS,sBAAC,4BAAAnB,EAAA,6DACNoB,OAAOC,SAAS,EAAG,GADb,mGAGWvB,EAHX,kGAGFQ,EAHE,OAKNI,EAAaJ,EAAKgB,SALZ,2CAMP,IAEHH,oBAAS,sBAAC,8BAAAnB,EAAA,6DACNoB,OAAOC,SAAS,EAAG,GACftB,EAFE,mGAEgGgB,GAFhG,SAGWjB,EAAQC,GAHnB,OAGFO,EAHE,OAKNM,EAAiBN,EAAKgB,SACtBJ,EAAcZ,EAAKiB,aANb,2CAOP,CAACR,IAEJI,qBAAU,YAIV,WACI,IAAIK,EAAQf,EAAUgB,KAAI,SAACC,EAAUC,GAAX,OACtB,qBAAiBC,UAAU,kBAA3B,SACI,eAAC,IAAD,CAAMC,GAAE,oBAAeH,EAASI,IAAMC,MAAO,CAAEC,eAAgB,QAA/D,UACI,qBAAKC,IAAG,6CAAwCP,EAASQ,eAAiBC,IAAKT,EAASU,QACxF,mBAAGR,UAAU,oBAAb,SAAkCF,EAASU,YAHzCT,MAOdb,EAAUU,GAZVa,KACD,CAAC5B,IAeAI,EAAOyB,OAAS,EAEZ,sBAAKV,UAAU,mBAAf,UACI,0BAASE,GAAG,eAAZ,UACI,oBAAIF,UAAU,WAAd,wBACA,cAAC,WAAD,CAAUf,OAAQA,EAAQ0B,UAAU,EAAMC,SAAU,SAExD,0BAASV,GAAG,iBAAZ,UACI,oBAAIF,UAAU,WAAd,gCACA,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,uBAAf,SACKjB,EAAcc,KAAI,SAACgB,EAAcd,GAAf,OACf,sBAAiBC,UAAU,qBAA3B,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAeY,EAAaX,IAApC,SACI,qBAAKG,IAAG,yCAAoCQ,EAAaC,aAAeP,IAAKM,EAAaL,UAE9F,4BAAIK,EAAaL,UAJXT,UAStB,sBAAKC,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,qBAAqBe,QAAS,WAwBhE5B,EAAc,GACdC,EAAeD,EAAc,IAzBb,SAEI,cAAC6B,EAAA,EAAD,CAAYC,aAAW,YAAvB,SAAmC,cAAC,IAAD,CAAed,MAAO,CAAEe,KAAM,mBAGzE,qBAAKlB,UAAU,kBAAf,SACI,qBAAKA,UAAU,2BAA2Be,QAAS,WAYnE5B,EAAcE,GACdD,EAAeD,EAAc,IAbb,SAEI,cAAC6B,EAAA,EAAD,CAAYC,aAAW,eAAvB,SAAsC,cAAC,IAAD,CAAkBd,MAAO,CAAEe,KAAM,4BAOpF,oBAAIlB,UAAU,eAAd,yB,uCCxFbmB,EAAYC,YAAa,eACzBC,EAAiBD,YAAa,oBAC9BE,EAAaF,YAAa,eAE1BG,EAAU,CAAEJ,YAAWE,iBAAgBC,cAEvCE,EACK,6BADLA,EAEK,8BAYLC,EAAUC,YATK,CACjBC,OAAQ,KACRC,OAAQ,GACRC,MAAO,EACPC,MAAO,IACPC,MAAO,EACPC,MAAO,KAGkB,mBACxBb,GAAY,SAACc,EAAOC,GAEjB,OADYD,EAAML,OAAOO,MAAK,SAAAC,GAAQ,OAAIA,EAAS5B,QAAU0B,EAAOG,QAAQ7B,SAEjE,2BACAyB,GADP,IAEIN,OAAQH,IAGL,2BACAS,GADP,IAEIN,OAAQH,EACRI,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoB,CAACU,MAAOJ,EAAOG,QAAQC,MAAO9B,MAAO0B,EAAOG,QAAQ7B,SAC9EqB,MAAOI,EAAMJ,MAAQ,EACrBE,MAAOE,EAAMF,MAAQE,EAAMH,WAdd,cAoBxBT,GAAiB,SAACY,EAAOC,GACtB,IAAIK,EAAQN,EAAML,OAAOY,QAAO,SAAAJ,GAAQ,OAAIA,EAAS5B,QAAU0B,EAAOG,WACtE,OAAO,2BACAJ,GADP,IAEIN,OAAQ,KACRC,OAAQW,EACRV,MAAOI,EAAMJ,MAAQ,EACrBE,MAAOE,EAAMF,MAAQE,EAAMH,WA3BV,cA+BxBR,GAAa,SAACW,EAAOC,GAClB,OAAO,2BACAD,GADP,IAEIJ,MAAO,EACPG,MAAOE,EAAOG,aAnCG,I,QCwMdI,EAtNE,WAEb,IAAMd,EAASe,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKhB,UACzCG,EAAQY,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKb,SAE9C,EAA0ClD,oBAAS,GAAnD,mBAAOgE,EAAP,KAAsBC,EAAtB,KAEMC,EAAWC,cACXC,EAAQC,cAEd1D,qBAAU,YAIV,WAEQqD,IACIjB,IAAWH,EACXwB,EAAME,KAAK,yBACJvB,IAAWH,GAClBwB,EAAME,KAAK,qCAGnBL,GAAiB,GAZjBM,KACD,CAACP,IAcJ,IAKIQ,EAASC,cAETC,EAAU,IAEV,OAAQF,IACRE,EAAUF,EAAOlD,IAGrB,MAA4BtB,oBAAS,GAArC,mBAAO2E,EAAP,KAAeC,EAAf,KACA,EAAoB5E,mBAAS0E,GAA7B,mBAAOpD,EAAP,KAAWuD,EAAX,KACA,EAAwB7E,mBAAS,CAC7B4B,MAAO,GACPkD,KAAM,GACNC,SAAU,EACVC,SAAU,GACVC,YAAa,GACbC,KAAM,GACNC,OAAQ,GACRC,cAAe,KARnB,mBAAOC,EAAP,KAAaC,EAAb,KAuIA,OA5HA3E,oBAAS,sBAAC,0EAAAnB,EAAA,6DACNoF,GAAU,GACVhE,OAAOC,SAAS,EAAG,GAEbtB,EAAM,sCAAwC+B,EAAK,2DAEnDiE,EAAa,sCAAwCjE,EAAK,mEAE1DkE,EAAa,sCAAwClE,EAAK,0EAR1D,SAUahC,EAAQC,GAVrB,cAUAO,EAVA,iBAWoBR,EAAQiG,GAX5B,eAWAE,EAXA,iBAYoBnG,EAAQkG,GAZ5B,QAgCN,GApBME,EAZA,OAeF9D,EAAQ9B,EAAK8B,MACbkD,EAAOhF,EAAK6F,aACZZ,EAAWjF,EAAK8F,QAChBC,EAAW/F,EAAKkF,SAChBC,EAAcnF,EAAK4B,cACnBoE,EAAchG,EAAKoC,YACnBiD,EAASrF,EAAKqF,OAGdD,EAAOO,EAAYP,KAGnBE,EAAgBM,EAAY5E,QAC5BiF,EAAsB,GAEtBC,EAAW,GAEXZ,EAActD,OAMd,IAJGiE,EAAsBX,EAActD,SACnCiE,EAAsBX,EAActD,QAHlB,WAMbmE,GAEL,IAAIC,EAAed,EAAca,GAAGrE,MAEhCuE,EAAef,EAAca,GAAG/D,YACpCiE,EAAe,kCAAoCA,EAEnDH,EAASI,KACL,sBAAKhF,UAAU,gBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAe+D,EAAca,GAAG3E,IAAMa,QAAS,kBAAM0C,EAAMO,EAAca,GAAG3E,KAApF,SACI,qBAAKG,IAAK0E,EAAcxE,IAAKuE,EAAc9E,UAAU,mBAEzD,4BAAI8E,SAZPD,EAAI,EAAGA,EAAIF,EAAqBE,IAAM,EAAtCA,QAgBTD,EAASI,KACL,mBAAGhF,UAAU,YAAb,8CAeR,IARIiF,EAAa,GACbC,EAAe,EACfpB,EAAKpD,OAASwE,IACdA,EAAepB,EAAKpD,QAGxBnC,QAAQC,IAAIsF,EAAKpD,QAERmE,EAAI,EAAGA,EAAIK,EAAcL,IAE1BA,EAAI,GAAKA,GAAKK,IACdD,GAAc,MAGlBA,GAAcnB,EAAKe,GAAGM,KAElBN,GAAKK,EAAe,IACpBD,GAAc,OAMtBvB,EAAOA,EAAK0B,UAAU,EAAG,GAGnBC,EAAQC,KAAKC,MAAM5B,EAAW,IAEpCA,EAAW0B,EAAQ,KADH1B,EAAW,GACS,IAIhCE,EADe,MAAfA,EACc,kCAAoCA,EAEpC,kCAAoCa,EAIlDc,EAAe,GAEnBzB,EAAO0B,SAAQ,SAACC,EAAGb,GACN,GAALA,GAAUA,GAAKd,EAAOrD,SACtB8E,GAAgB,MAEpBA,GAAgBE,EAAEP,QAGtBjB,EAAQ,CACJ1D,MAAOA,EACPkD,KAAMA,EACNC,SAAUA,EACVC,SAAUa,EACVZ,YAAaA,EACbC,KAAMmB,EACNlB,OAAQyB,EACRxB,cAAeY,IAGnBpB,GAAU,GAxHJ,4CA0HP,CAACtD,IAGA,oCACI,sBAAKF,UAAW,gBAAkBuD,EAAS,cAAgB,IAA3D,UACI,qBAAKvD,UAAU,qBAAf,SACI,qBAAKA,UAAU,0BAA0BK,IAAK4D,EAAKJ,YAAatD,IAAK0D,EAAKzD,MAAQ,kBAEtF,qBAAKR,UAAU,eAAeK,IAAK4D,EAAKJ,YAAatD,IAAK0D,EAAKzD,QAC/D,sBAAMR,UAAU,aAAhB,SAA8BiE,EAAKzD,QACnC,uBAAMR,UAAU,kBAAhB,UAAmCiE,EAAKP,KAAxC,MAAiDO,EAAKN,eAE1D,sBAAK3D,UAAU,qBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGA,UAAU,OAAb,sBACA,mBAAGA,UAAU,iBAAb,SAA+BiE,EAAKL,cAExC,sBAAK5D,UAAU,oBAAf,UACI,mBAAGA,UAAU,OAAb,6BACA,mBAAGA,UAAU,eAAb,SAA6BiE,EAAKH,UAEtC,sBAAK9D,UAAU,oBAAf,UACI,mBAAGA,UAAU,OAAb,wBACA,mBAAGA,UAAU,eAAb,SAA6BiE,EAAKF,eAG1C,sBAAK/D,UAAU,MAAf,UACI,iCAAO8B,EAAP,SACA,wBAAQ9B,UAAU,aAAae,QAAS,WAhLpC,IAACuB,EAAO9B,EAAP8B,EAgLmD2B,EAAKJ,YAhLjDrD,EAgL8DyD,EAAKzD,MA/KvFsC,EAASvB,EAAQJ,UAAU,CAAEmB,QAAO9B,WA+K2DqC,GAAiB,IAAxG,uBAEJ,sBAAK7C,UAAU,iBAAf,UACI,gDACA,qBAAKA,UAAU,YAAf,SACKiE,EAAKD,uB,yBC/HX2B,EAhFE,WAGb,IAAM/D,EAASc,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKf,UACzCE,EAAQY,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKb,SACxCC,EAAQW,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKZ,SAExCe,EAAWC,cAUX6C,EAAehE,EAAO/B,KAAI,SAACgG,EAAO9F,GAAR,OAC5B,sBAAKC,UAAU,eAAf,UACI,qBAAKK,IAAKwF,EAAMvD,MAAO/B,IAAKsF,EAAMrF,QAClC,4BAAIqF,EAAMrF,QACV,sBAAKR,UAAU,iBAAf,UAAiC8B,EAAjC,SACA,uBAAOf,QAAS,kBAbJP,EAaqBqF,EAAMrF,WAZ3CsC,EAASvB,EAAQF,eAAeb,IADjB,IAACA,GAaZ,SAA+C,cAACQ,EAAA,EAAD,CAAYC,aAAW,SAAvB,SAAgC,cAAC,IAAD,CAAmBd,MAAO,CAAEe,KAAM,mBAJlFnB,MASvC,EAA8BnB,oBAAS,GAAvC,mBAAOkH,EAAP,KAAgBC,EAAhB,KACA,EAA8BnH,mBAAS,IAAvC,mBAAOoH,EAAP,KAAgBC,EAAhB,KACA,EAA0CrH,oBAAS,GAAnD,mBAAOsH,EAAP,KAAsBC,EAAtB,KACA,EAA0BvH,mBAAS,IAAnC,mBAAOoD,EAAP,KAAcoE,EAAd,KAEMC,EAAa,IAAIC,OAAO,mSAgB9B,OAEI,qBAAKtG,UAAU,mBAAf,SACI,0BAASA,UAAU,qBAAnB,UAEI,oBAAIA,UAAU,cAAd,sBAEC4F,EAED,sBAAK5F,UAAU,kBAAf,UACI,uBAAOuG,KAAK,QACRC,YAAY,sBACZxG,UAAU,cACVyG,SA3BE,SAACC,GACnB,IAAM1E,EAAQ0E,EAAMC,OAAOC,MACvBP,EAAWQ,KAAK7E,IAChB+D,GAAW,GACXE,EAAW,iBACXE,GAAiB,GACjBC,EAASpE,KAET+D,GAAW,GACXE,EAAW,yCACXE,GAAiB,OAmBT,qBAAKnG,UAAW,WAAa8F,EAAU,WAAa,UAApD,SACKE,OAIT,sBAAKhG,UAAU,sBAAf,UACI,wCAAW+B,EAAX,SACA,gCAAO,cAAC,IAAD,CAAM9B,GAAG,WAAT,SAAoB,wBAAQD,UAAW,gBAAkBkG,EAAgB,WAAa,IAAKY,SAAUZ,EAAenF,QAAS,kBAzDjI,SAACiB,GAChBc,EAASvB,EAAQD,WAAWU,IAwDwHV,CAAWU,IAAxH,iCCoDhC+E,G,MAxHM,WAEjB,MAAwCnI,mBAAS,IAAjD,mBAAOoI,EAAP,KAAqBC,EAArB,KACA,EAAoCrI,mBAAS,GAA7C,mBAAOsI,EAAP,KAAmBC,EAAnB,KACA,EAAoCvI,mBAAS,IAA7C,mBAAOwI,EAAP,KAAmBC,EAAnB,KAUA9H,qBAAU,WACNC,OAAOC,SAAS,EAAG,GACnB6H,EAAaF,KACd,CAACF,EAAYE,IAEhB,IAAIE,EAAY,uCAAG,WAAOC,GAAP,iBAAAnJ,EAAA,6DAEXD,EAFW,oKAEwJ+I,EAFxJ,wBAEkLK,GAFlL,SAGYrJ,EAAQC,GAHpB,OAIO,OADlBqJ,EAHW,SAKXP,EACIO,EAAe9H,SAGvBnB,QAAQC,IAAI,YAAagJ,EAAe9H,SACxCnB,QAAQC,IAAI,iBAAkBgJ,GAVf,2CAAH,sDAYZC,EAAqBT,EAAanH,KAAI,SAAC6H,EAAU3H,GACjD,OACIiH,GAAgB,GACZ,sBAAiBhH,UAAU,iBAA3B,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAeyH,EAASxH,IAAhC,SACKwH,EAAS5G,YACN,qBAAKT,IAAG,yCAAoCqH,EAAS5G,aAAed,UAAU,kBAAkBO,IAAI,WAEpG,qBAAKF,IAAI,oBAAoBE,IAAI,OAGzC,4BAAImH,EAASlH,UARPT,GAWV,uCAAQA,MAIpB,OACI,sBAAKC,UAAU,mBAAf,UAEI,sBAAKA,UAAU,qBAAf,UAEI,oBAAIA,UAAU,WAAd,wBAEA,sBAAKA,UAAU,gBAAf,UACI,wBAAQA,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,0CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,4CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,QAArF,SACI,4CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,0CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,yCAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,QAArF,SACI,4CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,6CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,2CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,MAArF,SACI,0CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,8CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,4CAEJ,wBAAQrH,UAAU,kBAAkBe,QAAS,WAAQoG,EAAc,GAAIE,EAAc,KAArF,SACI,uDAIZ,0BAASrH,UAAU,yBAAnB,UACI,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,sBAAf,SACKyH,MAGT,sBAAKzH,UAAU,yBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,wBAAQA,UAAU,2BAA2Be,QAAS,WAhGlEmG,EAAa,GACbC,EAAcD,EAAa,IA+Ff,SAEI,cAAClG,EAAA,EAAD,CAAYC,aAAW,YAAvB,SAAmC,cAAC,IAAD,CAAed,MAAO,CAAEe,KAAM,mBAGzE,qBAAKlB,UAAU,kBAAf,SACI,wBAAQA,UAAU,2BAA2Be,QAAS,kBAClDoG,EAAcD,EAAa,IAD/B,SAEI,cAAClG,EAAA,EAAD,CAAYC,aAAW,eAAvB,SAAsC,cAAC,IAAD,CAAkBd,MAAO,CAAEe,KAAM,8BCtCpFyG,G,MA5EM,WAEjB,IAAIvE,EAASC,cAETuE,EAAY,aAEZ,UAAWxE,IACXwE,EAAYxE,EAAOyE,OAGvBtJ,QAAQC,IAAIoJ,GAEZ,MAA0BhJ,mBAASgJ,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBlJ,mBAAS,GAAjC,mBAAOmJ,EAAP,KACA,GADA,KAC4BnJ,mBAAS,KAArC,mBAAOoJ,EAAP,KAAeC,EAAf,KAiDA,OA/CGJ,GAASD,GACRE,EAASF,GAGbrI,oBAAS,sBAAC,kCAAAnB,EAAA,6DACNoB,OAAOC,SAAS,EAAG,GAEnByI,SAASC,cAAc,WAAWvB,MAAQ,GAEtCzI,EAAM,2GACG0J,EAAQ,SAAWE,EAAO,uBANjC,SAOe7J,EAAQC,GAPvB,OAOFiK,EAPE,OAQFxG,EAASwG,EAAS1I,QAGlB2I,EAAgB,GAGpBzG,EAAO6D,SAAQ,SAACC,EAAGb,GAEf,IAAIyD,EAAgB5C,EAAE5E,YAGlBwH,EADgB,MAAjBA,EACiB,kCAAoC5C,EAAE5E,YAGtC,oBAGpBuH,EAAcrD,KACV,sBAAKhF,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAeyF,EAAExF,IAAzB,SACI,qBAAKF,UAAU,eAAeK,IAAKiI,EAAe/H,IAAKmF,EAAElF,UAE7D,4BAAIkF,EAAElF,eAId6H,EAAc3H,SAEL,sCACTwH,SAASC,cAAc,UAAUI,UADxB,uCAIbN,EAAUI,GAxCJ,4CAyCP,CAACN,EAAMF,IAIN,kCACI,sBAAK7H,UAAU,mBAAf,UACI,oBAAGA,UAAU,QAAb,6BAAmC6H,KACnC,qBAAK7H,UAAU,cAAf,SACKgI,WCQNQ,EA3EQ,WAEnB,MAA4C5J,mBAAS,IAArD,mBAAO6J,EAAP,KAAuBC,EAAvB,KACA,EAAsC9J,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoCR,mBAAS,GAA7C,mBAAOS,EAAP,UAQAE,qBAAU,WACNC,OAAOC,SAAS,EAAG,GACnBkJ,EAAmBtJ,KACpB,CAACF,EAAaE,IAEjB,IAAIsJ,EAAkB,uCAAG,8BAAAvK,EAAA,6DACrBG,QAAQC,IAAI,OAAQW,GAChBhB,EAFiB,iKAE+IgB,GAF/I,SAGJjB,EAAQC,GAHJ,OAGjBO,EAHiB,OAIA,MAAlB+J,GACCC,EACIhK,EAAKgB,SAGbnB,QAAQC,IAAI,YAAaiK,EAAe/I,SACxCnB,QAAQC,IAAI,iBAAkBiK,GAVT,2CAAH,qDAYlBG,EAAqBH,EAAe5I,KAAI,SAACgJ,EAAU9I,GACnD,OACI0I,GAAkB,GAClB,sBAAiBzI,UAAU,mBAA3B,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAe4I,EAAS3I,IAAhC,SACC2I,EAAS/H,YACN,qBAAKT,IAAG,yCAAoCwI,EAAS/H,aAAed,UAAU,eAAeO,IAAI,KAErG,qBAAKF,IAAI,oBAAoBE,IAAI,OAGjC,4BAAIsI,EAASrI,UARPT,GAWV,uCAAQA,MAIhB,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,+BAEA,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAf,SACK4I,MAGT,sBAAK5I,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAqBe,QAAS,WAnDzD5B,EAAa,GACbC,EAAeD,EAAY,IAkDf,SAEI,cAAC6B,EAAA,EAAD,CAAYC,aAAW,YAAvB,SAAmC,cAAC,IAAD,CAAed,MAAO,CAAEe,KAAM,mBAGzE,qBAAKlB,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAqBe,QAAS,kBACzC3B,EAAeD,EAAY,IAD/B,SAEI,cAAC6B,EAAA,EAAD,CAAYC,aAAW,eAAvB,SAAsC,cAAC,IAAD,CAAkBd,MAAO,CAAEe,KAAM,0BCQpF4H,EA1EI,WAEf,MAAgDlK,mBAAS,IAAzD,mBAAOmK,EAAP,KAAyBC,EAAzB,KACA,EAA4CpK,mBAAS,GAArD,mBAAOqK,EAAP,KAAuBC,EAAvB,KACA,EAA4CtK,mBAAS,OAArD,mBAAOuK,EAAP,UAOA5J,qBAAU,WACNC,OAAOC,SAAS,EAAG,GACnB2J,EAAiBD,KAClB,CAACF,EAAgBE,IAEpB,IAAIC,EAAgB,uCAAG,WAAO7B,GAAP,iBAAAnJ,EAAA,6DAEfD,EAFe,wKAEwJ8K,EAFxJ,wBAEsL1B,GAFtL,SAGYrJ,EAAQC,GAHpB,OAIO,OADtBkL,EAHe,SAKfL,EACIK,EAAmB3J,SAG3BnB,QAAQC,IAAI,YAAa6K,EAAmB3J,SAC5CnB,QAAQC,IAAI,iBAAkB6K,GAVX,2CAAH,sDAahBC,EAAyBP,EAAiBlJ,KAAI,SAAC6H,EAAU3H,GACzD,OACIgJ,GAAoB,GAChB,sBAAiB/I,UAAU,mBAA3B,UACI,cAAC,IAAD,CAAMC,GAAE,oBAAeyH,EAASxH,IAAhC,SACKwH,EAAS5G,YACN,qBAAKT,IAAG,yCAAoCqH,EAAS5G,aAAed,UAAU,eAAeO,IAAI,KAEjG,qBAAKF,IAAI,oBAAoBE,IAAI,OAGzC,4BAAImH,EAASlH,UARPT,GAWV,uCAAQA,MAIpB,OACI,0BAASC,UAAU,gBAAnB,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,0BAEJ,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAf,SACKsJ,MAGT,sBAAKtJ,UAAU,sBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAqBe,QAAS,WApDrDkI,EAAiB,GACjBC,EAAkBD,EAAiB,IAmD3B,SAEI,cAACjI,EAAA,EAAD,CAAYC,aAAW,YAAvB,SAAmC,cAAC,IAAD,CAAed,MAAO,CAAEe,KAAM,mBAGzE,qBAAKlB,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAqBe,QAAS,kBACzCmI,EAAkBD,EAAiB,IADvC,SAEI,cAACjI,EAAA,EAAD,CAAYC,aAAW,eAAvB,SAAsC,cAAC,IAAD,CAAkBd,MAAO,CAAEe,KAAM,0BCpChFqI,G,MArCC,WAGX,IAAM3H,EAASc,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKf,UACzCE,EAAQY,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKb,SACxCC,EAAQW,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKZ,SACxCC,EAAQU,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKX,SAExC4D,EAAehE,EAAO/B,KAAI,SAACgG,EAAO9F,GAAR,OAC5B,sBAAKC,UAAU,cAAf,UACI,qBAAKK,IAAKwF,EAAMvD,MAAO/B,IAAKsF,EAAMrF,QAClC,4BAAIqF,EAAMrF,QACV,sBAAKR,UAAU,gBAAf,UAAgC8B,EAAhC,WAH8B/B,MAOtC,OAEI,qBAAKC,UAAU,kBAAf,SACI,0BAASA,UAAU,oBAAnB,UAEI,oBAAIA,UAAU,aAAd,oBAEC4F,EAED,qBAAK5F,UAAU,qBAAf,SACI,wCAAW+B,EAAX,WAEL,yDACA,sEAAyCC,Y,wCCyB1CwH,MAhDf,YAAmC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAEb9H,EAASc,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKf,UACzCE,EAAQY,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKb,SACxCC,EAAQW,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKZ,SAExCe,EAAWC,cAMX4G,EAAgB/H,EAAO/B,KAAI,SAACgG,EAAO9F,GAAR,OAC7B,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,SACI,4BAAI6F,EAAMrF,UAEd,qBAAKR,UAAU,cAAf,SAA6B,8BAAI8B,EAAJ,WAC7B,uBAAO9B,UAAU,gBAAgBe,QAAS,kBAV9BP,EAU+CqF,EAAMrF,WATrEsC,EAASvB,EAAQF,eAAeb,IADjB,IAACA,GAUZ,SAAyE,cAACQ,EAAA,EAAD,CAAYC,aAAW,SAAvB,SAAgC,cAAC,IAAD,CAAmBd,MAAO,CAAEe,KAAM,mBAL/GnB,MASpC,OAAK0J,EACEG,IAASC,aACZ,qCACI,qBAAK7J,UAAU,iBAAiBe,QAAS,kBAAMxC,QAAQC,IAAI,cAC3D,sBAAKwB,UAAU,eAAf,UACI,cAAC,IAAD,CAAMC,GAAG,kBAAT,SAA2B,wBAAQ6J,UAAU,aAAa5J,GAAG,iBAAiBa,QAAS2I,EAA5D,2BAC3B,wBAAQI,UAAU,aAAa5J,GAAG,iBAAiBa,QAAS2I,EAA5D,oBAEA,qBAAK1J,UAAU,gBAAf,SACI,0BAASA,UAAU,kBAAnB,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,SAA8B,oBAAIA,UAAU,WAAd,wBAC7B2J,KAGL,qBAAK3J,UAAU,mBAAf,SACI,wCAAW+B,EAAX,sBAMpBmG,SAAS6B,eAAe,WAtBV,MC2DPC,MA1Ef,WAEE,MAA0BpL,mBAAS,IAAnC,mBAAOiJ,EAAP,KAAcC,EAAd,KACA,EAA4BlJ,oBAAS,GAArC,mBAAOqL,EAAP,KAAeC,EAAf,KACMrI,EAAQa,aAAY,SAAAT,GAAK,OAAIA,EAAMU,KAAKd,SAM9C,OAEE,sBAAK7B,UAAU,MAAf,UACE,cAAC,IAAD,UACE,sBAAKA,UAAU,WAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,UAAUE,GAAG,gBAA5B,UACE,cAAC,IAAD,CAAMD,GAAG,eAAT,SAAwB,wBAAQD,UAAU,kBAAkBE,GAAG,eAAvC,0BACxB,cAAC,IAAD,CAAMD,GAAG,gBAAT,SAAyB,wBAAQD,UAAU,aAAaE,GAAG,qBAAlC,0BACzB,cAAC,IAAD,CAAMD,GAAG,cAAT,SAAuB,wBAAQD,UAAU,aAAaE,GAAG,iBAAlC,0BACvB,cAAC,IAAD,CAAMD,GAAG,YAAT,SAAqB,wBAAQD,UAAU,aAAaE,GAAG,iBAAlC,wBACrB,uBAAOA,GAAG,SAASqG,KAAK,OAAOvG,UAAU,eAAewG,YAAY,SAAMC,SAftF,SAAsBC,GACpBoB,EAASpB,EAAMC,OAAOC,UAeZ,cAAC,IAAD,CAAM3G,GAAa,IAAT4H,EAAc,WAAaA,EAAQ,GAA7C,SAAiD,cAAC7G,EAAA,EAAD,CAAYC,aAAW,SAAvB,SAAgC,cAAC,IAAD,CAAYd,MAAO,CAAEe,KAAM,iBAC5G,sBAAKlB,UAAU,sBAAf,UACE,cAACgB,EAAA,EAAD,CAAYC,aAAW,OAAvB,SAA8B,cAAC,IAAD,CAAoBd,MAAO,CAAEe,KAAM,WAAaH,QAAS,kBAAMmJ,GAAU,QACvG,cAAC,EAAD,CAAOT,KAAMQ,EAAQP,QAAS,kBAAMQ,GAAU,MAC9C,qBAAKlK,UAAU,iBAAiBmK,OAAkB,IAAVtI,EAAxC,SAAsDA,YAI5D,+BACE,qBAAK7B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,kBAOZ,iCACE,qBAAKrK,UAAU,SAAf,SACE,uFCxEKsK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCHRQ,EAAcC,YAAgB,CAChCrI,KAAMsI,I,SCOJC,GAAQC,YAAe,CAC3B1J,QAAUsJ,IAGNK,GAAU,CACdC,SAAUC,IAAUC,cACpBC,QAAS,IACTC,OAAQ,OACRC,WAAYC,IAAYC,OAI1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACA,cAAC,IAAD,yBAAec,SAAUC,MAAmBb,IAA5C,aACA,cAAC,EAAD,WAIFlD,SAAS6B,eAAe,SAM1BO,M","file":"static/js/main.f2447178.chunk.js","sourcesContent":["\nconst GetData = async (url) => {\n \n    try {\n    let resp = await fetch(url);\n    console.log('1. Got response', resp);\n    let data = await resp.json();\n    console.log('2. Got data', data);\n    \n    return data;\n    }\n    catch(error) {\n    console.log(error);\n    }\n   \n}\n\nexport default GetData;","import './startScreen.css';\nimport './similarPages.css';\nimport { Carousel } from '3d-react-carousal';\nimport { useState, useEffect } from 'react';\nimport GetData from './GetData';\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst StartScreen = () => {\n\n    const [newMovies, setNewMovies] = useState([]);\n    const [popularMovies, setPopularMovies] = useState([]);\n    const [slides, setSlides] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n\n    useEffect(async () => {\n        window.scrollTo(0, 0)\n        let url = `https://api.themoviedb.org/3/movie/now_playing?api_key=86f237d170416093156de7affa43927e`;\n        let data = await GetData(url);\n        //console.log('3. Got data in startscreen', data.results);\n        setNewMovies(data.results);\n    }, [])\n\n    useEffect(async () => {\n        window.scrollTo(0, 0)\n        let url = `https://api.themoviedb.org/3/movie/popular?api_key=86f237d170416093156de7affa43927e&page=${currentPage}`;\n        let data = await GetData(url);\n        //console.log('4. Got data in startscreen', data.results);\n        setPopularMovies(data.results);\n        setTotalPages(data.total_pages);\n    }, [currentPage])\n\n    useEffect(() => {\n        createSlides();\n    }, [newMovies])\n\n    function createSlides() {\n        let slide = newMovies.map((newMovie, index) => (\n            <div key={index} className=\"movie-slide-div\">\n                <Link to={`/filminfo/${newMovie.id}`} style={{ textDecoration: 'none' }}>\n                    <img src={`https://image.tmdb.org/t/p/original${newMovie.backdrop_path}`} alt={newMovie.title} />\n                    <p className=\"movie-slide-title\">{newMovie.title}</p>\n                </Link>\n            </div>\n        ));\n        setSlides(slide);\n    }\n    //console.log(\"5. slides with data:\", slides)\n\n    if (slides.length > 0) {\n        return (\n            <div className=\"startscreen-wrap\">\n                <section id=\"movie-slider\">\n                    <h2 className=\"pages-h1\">Nya filmer</h2>\n                    <Carousel slides={slides} autoplay={true} interval={5000} />\n                </section>\n                <section id=\"popular-movies\">\n                    <h3 className=\"pages-h1\">Populära filmer</h3>\n                    <div className=\"popular-movies-container\">\n                        <div className=\"grids-popular-movies\">\n                            {popularMovies.map((popularMovie, index) => (\n                                <div key={index} className=\"popular-movies-div\">\n                                    <Link to={`/filminfo/${popularMovie.id}`} >\n                                        <img src={`https://image.tmdb.org/t/p/w500${popularMovie.poster_path}`} alt={popularMovie.title} />\n                                    </Link>\n                                    <p>{popularMovie.title}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className=\"change-page-buttons\">\n                        <div className=\"change-page-div\">\n                            <button className=\"change-page-button\" onClick={() =>\n                                previousPage()}>\n                                <IconButton aria-label=\"arrowback\"><ArrowBackIcon style={{ fill: '#000000' }} /></IconButton>\n                            </button>\n                        </div>\n                        <div className=\"change-page-div\">\n                            <div className=\"categories-change-button\" onClick={() =>\n                                nextPage(currentPage + 1)}>\n                                <IconButton aria-label=\"arrowforward\"><ArrowForwardIcon style={{ fill: '#000000' }} /></IconButton>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        )\n    } else return (<h3 className=\"loading-text\">Loading...</h3>)\n\n    function nextPage() {\n        if (currentPage < totalPages) {\n            setCurrentPage(currentPage + 1);\n        }\n    }\n\n    function previousPage() {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n}\n\nexport default StartScreen;","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nconst addToCart = createAction(\"add to cart\");\nconst removeFromCart = createAction(\"remove from cart\");\nconst resetCount = createAction(\"reset count\")\n\nconst actions = { addToCart, removeFromCart, resetCount };\n\nconst STATUS = {\n    ADDED: \"movie is now added in cart\",\n    EXIST: \"movie already exist in cart\"\n}\n\nconst initialState = {\n    status: null,\n    movies: [],\n    count: 0,\n    price: 149,\n    total: 0,\n    email: \"\"\n}\n\nconst reducer = createReducer(initialState, {\n    [addToCart]: (state, action) => {\n        let found = state.movies.find(cartItem => cartItem.title === action.payload.title)\n        if (found) {\n            return {\n                ...state,\n                status: STATUS.EXIST\n            };\n        } else {\n            return {\n                ...state,\n                status: STATUS.ADDED,\n                movies: [...state.movies, {image: action.payload.image, title: action.payload.title}],\n                count: state.count + 1,\n                total: state.total + state.price\n                \n            };\n        }\n    },\n    \n    [removeFromCart]: (state, action) => {\n        let found = state.movies.filter(cartItem => cartItem.title !== action.payload)\n        return {\n            ...state,\n            status: null,\n            movies: found,\n            count: state.count - 1,\n            total: state.total - state.price\n        }\n    },\n\n    [resetCount]: (state, action) => {\n        return {\n            ...state,\n            count: 0,\n            email: action.payload\n        }\n    }\n})\n\nexport { actions, reducer, STATUS };","import './filmInfo.css'\nimport React, { useEffect, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport GetData from './GetData';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions, STATUS } from '../features/cart';\nimport { useAlert } from 'react-alert';\n\nconst Filminfo = () => {\n\n    const status = useSelector(state => state.cart.status);\n    const price = useSelector(state => state.cart.price);\n\n    const [buttonPressed, setButtonPressed] = useState(false);\n\n    const dispatch = useDispatch();\n    const alert = useAlert()\n\n    useEffect(() => {\n        showAlert();\n    }, [buttonPressed])\n\n    function showAlert() {\n\n        if (buttonPressed) {\n            if (status === STATUS.ADDED) {\n                alert.show(\"Filmen är tillagd!\");\n            } else if (status === STATUS.EXIST) {\n                alert.show(\"Filmen finns redan i varukorgen!\");\n            }\n        }\n        setButtonPressed(false);\n    }\n\n    const addItem = (image, title) => {\n        dispatch(actions.addToCart({ image, title }));\n        // console.log(\"info\", {image, title})\n    }\n\n    let params = useParams();\n\n    let movieId = 550\n\n    if ('id' in params) {\n        movieId = params.id;\n    }\n\n    const [loaded, setLoaded] = useState(false)\n    const [id, setId] = useState(movieId)\n    const [info, setInfo] = useState({\n        title: \"\",\n        year: \"\",\n        playtime: 0,\n        overview: \"\",\n        bannerImage: \"\",\n        cast: \"\",\n        genres: \"\",\n        similarMovies: []\n    })\n\n    useEffect(async () => {\n        setLoaded(false)\n        window.scrollTo(0, 0)\n\n        const url = \"https://api.themoviedb.org/3/movie/\" + id + \"?api_key=86f237d170416093156de7affa43927e&language=en-US\"\n\n        const creditsUrl = \"https://api.themoviedb.org/3/movie/\" + id + \"/credits?api_key=86f237d170416093156de7affa43927e&language=en-US\"\n\n        const similarUrl = \"https://api.themoviedb.org/3/movie/\" + id + \"/similar?api_key=86f237d170416093156de7affa43927e&language=en-US&page=1\"\n\n        const data = await GetData(url)\n        const creditsData = await GetData(creditsUrl)\n        const similarData = await GetData(similarUrl)\n\n        //movie\n        let title = data.title\n        let year = data.release_date\n        let playtime = data.runtime\n        let synopsis = data.overview\n        let bannerImage = data.backdrop_path\n        let posterImage = data.poster_path\n        let genres = data.genres\n\n        //credits\n        let cast = creditsData.cast\n\n        //similar movies\n        let similarMovies = similarData.results\n        let amountSimilarMovies = 10\n\n        let elements = []\n\n        if (similarMovies.length) {\n\n            if(amountSimilarMovies > similarMovies.length){\n                amountSimilarMovies = similarMovies.length\n            }\n\n            for (let i = 0; i < amountSimilarMovies; i++) {\n\n                let currentTitle = similarMovies[i].title\n\n                let currentImage = similarMovies[i].poster_path\n                currentImage = \"https://image.tmdb.org/t/p/w500\" + currentImage\n\n                elements.push(\n                    <div className=\"similar-movie\">\n                        <Link to={`/filminfo/${similarMovies[i].id}`} onClick={() => setId(similarMovies[i].id)}>\n                            <img src={currentImage} alt={currentTitle} className=\"movie-poster\" />\n                        </Link>\n                        <p>{currentTitle}</p>\n                    </div>)\n            }\n        } else {\n            elements.push(\n                <p className=\"no-movies\">Det finns inga liknande titlar.</p>)\n        }\n\n        //convert variables to their correct values\n\n        //cast -> \"name, name, name...\"\n\n        let castString = \"\"\n        let amountActors = 4\n        if (cast.length < amountActors) {\n            amountActors = cast.length\n        }\n\n        console.log(cast.length)\n\n        for (let i = 0; i < amountActors; i++) {\n\n            if (i > 0 && i != amountActors) {\n                castString += \", \"\n            }\n\n            castString += cast[i].name\n\n            if (i == amountActors - 1) {\n                castString += \"...\"\n            }\n\n        }\n\n        //1999-05-16 -> 1999\n        year = year.substring(0, 4)\n\n        //139 -> 2h 19m\n        const hours = Math.floor(playtime / 60)\n        const minutes = playtime % 60\n        playtime = hours + \"h \" + minutes + \"m\"\n\n        // /aösldköaldsk.jpg -> https://image.tmdb.org/t/p/w500/aösldköaldsk.jpg\n        if (bannerImage != null) {\n            bannerImage = \"https://image.tmdb.org/t/p/w500\" + bannerImage\n        } else {\n            bannerImage = \"https://image.tmdb.org/t/p/w500\" + posterImage\n        }\n\n        //genres -> action, adventure, whatever\n        let genresString = \"\"\n\n        genres.forEach((e, i) => {\n            if (i != 0 && i != genres.length) {\n                genresString += \", \"\n            }\n            genresString += e.name\n        });\n\n        setInfo({\n            title: title,\n            year: year,\n            playtime: playtime,\n            overview: synopsis,\n            bannerImage: bannerImage,\n            cast: castString,\n            genres: genresString,\n            similarMovies: elements\n        })\n\n        setLoaded(true)\n\n    }, [id])\n\n    return (\n        <section>\n            <div className={\"movie-banner\" + (loaded ? \" transition\" : \"\")}>\n                <div className=\"background-wrapper\">\n                    <img className=\"banner-image-background\" src={info.bannerImage} alt={info.title + \" background\"} />\n                </div>\n                <img className=\"banner-image\" src={info.bannerImage} alt={info.title} />\n                <span className=\"movie-name\">{info.title}</span>\n                <span className=\"movie-year-time\">{info.year} / {info.playtime}</span>\n            </div>\n            <div className=\"movie-info-content\">\n                <div className=\"synopsis-div column\">\n                    <p className=\"bold\">Handling</p>\n                    <p className=\"movie-synopsis\">{info.overview}</p>\n                </div>\n                <div className=\"actors-div column\">\n                    <p className=\"bold\">Skådespelare</p>\n                    <p className=\"movie-actors\">{info.cast}</p>\n                </div>\n                <div className=\"genres-div column\">\n                    <p className=\"bold\">Kategorier</p>\n                    <p className=\"movie-genres\">{info.genres}</p>\n                </div>\n            </div>\n            <div className=\"buy\">\n                <span>{price} kr</span>\n                <button className=\"buy-button\" onClick={() => { addItem(info.bannerImage, info.title); setButtonPressed(true) }}>Köp</button>\n            </div>\n            <div className=\"similar-movies\">\n                <p>Liknande filmer</p>\n                <div className=\"movie-row\">\n                    {info.similarMovies}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Filminfo;","import './checkout.css'\nimport React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../features/cart';\n\nconst Checkout = () => {\n\n    // Redux\n    const movies = useSelector(state => state.cart.movies);\n    const price = useSelector(state => state.cart.price);\n    const total = useSelector(state => state.cart.total);\n\n    const dispatch = useDispatch();\n\n    const removeItem = (title) => {\n        dispatch(actions.removeFromCart(title));\n    }\n\n    const resetCount = (email) => {\n        dispatch(actions.resetCount(email));\n    }\n\n    const cartElements = movies.map((movie, index) => (\n        <div className=\"checkout-row\" key={index}>\n            <img src={movie.image} alt={movie.title} />\n            <p>{movie.title}</p>\n            <div className=\"checkout-price\">{price} kr</div>\n            <aside onClick={() => removeItem(movie.title)}><IconButton aria-label=\"delete\"><DeleteForeverIcon style={{ fill: '#000000' }} /></IconButton></aside>\n        </div>\n    ));\n\n    // Email validation\n    const [isValid, setIsValid] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [disableButton, setDisableButton] = useState(true);\n    const [email, setEmail] = useState(\"\");\n\n    const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n    \n    const validateEmail = (event) => {\n        const email = event.target.value;\n        if (emailRegex.test(email)) {\n            setIsValid(true);\n            setMessage('Giltig e-post');\n            setDisableButton(false);\n            setEmail(email);\n        } else {\n            setIsValid(false);\n            setMessage('Vänligen skriv in en giltig e-post');\n            setDisableButton(true);\n        }\n    };\n\n    return (\n\n        <div className=\"checkout-content\">\n            <section className=\"checkout-container\">\n\n                <h1 className=\"checkout-h1\">Varukorg</h1>\n\n                {cartElements}\n\n                <div className=\"email-container\">\n                    <input type=\"email\"\n                        placeholder=\"Skriv in din e-post\"\n                        className=\"email-input\"\n                        onChange={validateEmail}\n                    />\n                    <div className={\"message\" + (isValid ? \" success\" : \" error\")}>\n                        {message}\n                    </div>\n                </div>\n\n                <div className=\"checkout-finish-row\">\n                    <p>Summa: {total} kr</p>\n                    <aside><Link to=\"/receipt\"><button className={\"checkout-pay\" + (disableButton ? \" disable\" : \"\")} disabled={disableButton} onClick={()=>resetCount(email)}>Betala</button></Link></aside>\n                </div>\n\n            </section>\n\n\n        </div>\n    )\n}\n\nexport default Checkout;","import './filmCategory.css';\n// import './similarPages.css';\nimport React, { useState } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport GetData from './GetData'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst FilmCategory = () => {\n\n    const [categoryList, setCategoryList] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [categoryId, setCategoryId] = useState(35);\n\n    let previousPage = () => {\n        if (pageNumber > 1) {\n            setPageNumber(pageNumber - 1)\n        }\n    }\n\n    {/*useEffect(() => {})*/ }\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        loadCategory(categoryId)\n    }, [pageNumber, categoryId])\n\n    let loadCategory = async (genreId) => {\n        /*console.log('Kategori', pageNumber);*/\n        let url = `https://api.themoviedb.org/3/discover/movie?api_key=86f237d170416093156de7affa43927e&sort_by=vote_count.desc&include_adult=false&include_video=false&page=${pageNumber}&with_genres=${genreId}`;\n        let categoryMovies = await GetData(url);\n        if (categoryMovies != null) {\n            setCategoryList(\n                categoryMovies.results\n            );\n        }\n        console.log('results: ', categoryMovies.results);\n        console.log('loadCategory: ', categoryMovies);\n    }\n    let moviesCategoryList = categoryList.map((category, index) => {\n        return (\n            categoryList != [] ?\n                <div key={index} className=\"all-categories\">\n                    <Link to={`/filminfo/${category.id}`} >\n                        {category.poster_path ?\n                            <img src={`https://image.tmdb.org/t/p/w500${category.poster_path}`} className=\"category-poster\" alt=\"poster\" />\n                            :\n                            <img src=\"img/no-poster.png\" alt=\"\" />\n                        }\n                    </Link>\n                    <p>{category.title}</p>\n                </div>\n                :\n                <p key={index}>No data</p>\n        )\n    })\n\n    return (\n        <div className=\"category-content\">\n\n            <div className=\"categories-buttons\">\n\n                <h1 className=\"pages-h1\">Kategorier</h1>\n\n                <div className=\"category-grid\">\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(28) }}>\n                        <h3>Action</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(16) }}>\n                        <h3>Animerat</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(10751) }}>\n                        <h3>Barnfilm</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(35) }}>\n                        <h3>Komedi</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(18) }}>\n                        <h3>Drama</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(10749) }}>\n                        <h3>Romantik</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(27) }}>\n                        <h3>Skräck</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(14) }}>\n                        <h3>Fantasy</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(878) }}>\n                        <h3>Sci-Fi</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(12) }}>\n                        <h3>Äventyr</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(53) }}>\n                        <h3>Thriller</h3>\n                    </button>\n                    <button className=\"category-button\" onClick={() => { setPageNumber(1); setCategoryId(99) }}>\n                        <h3>Dokumentär</h3>\n                    </button>\n                </div>\n            </div>\n            <section className=\"all-categories-content\">\n                <div className=\"all-categories-container\">\n                    <div className=\"all-categories-grid\">\n                        {moviesCategoryList}\n                    </div>\n                </div>\n                <div className=\"categories-change-page\">\n                    <div className=\"category-change\">\n                        <button className=\"categories-change-button\" onClick={() =>\n                            previousPage()}>\n                            <IconButton aria-label=\"arrowback\"><ArrowBackIcon style={{ fill: '#000000' }} /></IconButton>\n                        </button>\n                    </div>\n                    <div className=\"category-change\">\n                        <button className=\"categories-change-button\" onClick={() =>\n                            setPageNumber(pageNumber + 1)}>\n                            <IconButton aria-label=\"arrowforward\"><ArrowForwardIcon style={{ fill: '#000000' }} /></IconButton>\n                        </button>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default FilmCategory;","import './searchMovies.css';\nimport { useState, useEffect } from 'react';\nimport GetData from './GetData';\nimport { Link, useParams } from \"react-router-dom\";\n\n//working pages\n\nconst SearchMovies = () => {\n\n    let params = useParams()\n\n    let queryText = \"fight club\"\n\n    if ('query' in params) {\n        queryText = params.query\n    }\n\n    console.log(queryText)\n\n    const [query, setQuery] = useState(queryText)\n    const [page, setPage] = useState(1)\n    const [search, setSearch] = useState([])\n\n    if(query != queryText){\n        setQuery(queryText)\n    }\n\n    useEffect(async () => {\n        window.scrollTo(0, 0)\n\n        document.querySelector('#search').value = \"\"\n        \n        let url = \"https://api.themoviedb.org/3/search/movie?api_key=86f237d170416093156de7affa43927e&language=en-US&\"\n        + \"query=\" + query + \"&page=\" + page + \"&include_adult=false\"\n        let response = await GetData(url)\n        let movies = response.results\n\n\n        let movieElements = []\n\n        //loop through the array of movies \n        movies.forEach((e, i) => {\n\n            let currentPoster = e.poster_path\n            \n            if(currentPoster != null){\n                currentPoster = \"https://image.tmdb.org/t/p/w500\" + e.poster_path\n            } else {\n                //when there is no poster image for a movie\n                currentPoster = \"img/no-poster.png\"\n            }\n\n            movieElements.push(\n                <div className=\"movie\">\n                    <Link to={`/filminfo/${e.id}`} >\n                        <img className=\"movie-poster\" src={currentPoster} alt={e.title} />\n                    </Link>\n                    <p>{e.title}</p>\n                </div>\n            )            \n        });\n        if(!movieElements.length){\n            // movieElements.push(<p>Inga resultat :(</p>)\n            let el = \"Din sökning gav inga resultat :(\"\n            document.querySelector('.query').innerText = el \n        }\n        \n        setSearch(movieElements)\n    }, [page, query])\n\n    return (\n\n        <section>\n            <div className=\"search-container\">\n                <p className=\"query\">Sökresultat: {query}</p>\n                <div className=\"search-grid\">\n                    {search}\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default SearchMovies;","import './startScreen.css';\nimport './similarPages.css';\nimport { useState, useEffect } from 'react';\nimport GetData from './GetData';\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst UpcomingMovies = () => {\n\n    const [upcomingMovies, setUpcomingMovies] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    \n\n    let previousPage = () => {\n        if (currentPage >1) { \n            setCurrentPage(currentPage-1)\n        }\n    }\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        loadUpcomingMovies(totalPages)\n    }, [currentPage, totalPages])\n\n    let loadUpcomingMovies = async () => {\n        console.log('Sida', currentPage);\n        let url = `https://api.themoviedb.org/3/movie/upcoming?api_key=86f237d170416093156de7affa43927e&sort_by=popular.desc&include_adult=false&include_video=false&page=${currentPage}`;\n        let data = await GetData(url);\n        if(upcomingMovies != null) {\n            setUpcomingMovies(\n                data.results\n            );\n        }\n        console.log('results: ', upcomingMovies.results);\n        console.log('loadCategory: ', upcomingMovies);\n    }\n    let upcomingMoviesList = upcomingMovies.map((upcoming, index) => {\n        return (\n            upcomingMovies != [] ?\n            <div key={index} className=\"pages-categories\">\n                <Link to={`/filminfo/${upcoming.id}`}>\n                {upcoming.poster_path ? \n                    <img src={`https://image.tmdb.org/t/p/w500${upcoming.poster_path}`} className=\"pages-poster\" alt=\"\" />\n                :\n                <img src=\"img/no-poster.png\" alt=\"\" />\n            }\n                </Link>\n                <p>{upcoming.title}</p> \n            </div>\n            :\n            <p key={index}>No data</p>\n            )\n        })\n\n    return (\n        <div className=\"pages-content\">\n            <div className=\"pages-category\">\n                <h1 className=\"pages-h1\">Kommande filmer</h1>\n            </div>\n                <div className=\"pages-grid-container\">\n                    <div className=\"pages-grid\">\n                        {upcomingMoviesList}\n                    </div>\n                </div>\n                <div className=\"change-page-buttons\">\n                    <div className=\"change-page-div\">\n                        <div className=\"change-page-button\" onClick={() => \n                            previousPage()}>\n                            <IconButton aria-label=\"arrowback\"><ArrowBackIcon style={{ fill: '#000000' }} /></IconButton>\n                        </div>\n                    </div>\n                    <div className=\"change-page-div\">\n                        <div className=\"change-page-button\" onClick={() => \n                            setCurrentPage(currentPage+1)}>\n                            <IconButton aria-label=\"arrowforward\"><ArrowForwardIcon style={{ fill: '#000000' }} /></IconButton>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default UpcomingMovies;","import './startScreen.css';\nimport './similarPages.css';\nimport { useState, useEffect } from 'react';\nimport GetData from './GetData';\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nconst KidsMovies = () => {\n\n    const [kidscategoryList, setKidsCategoryList] = useState([]);\n    const [kidspageNumber, setKidsPageNumber] = useState(1);\n    const [kidscategoryId, setKidsCategoryId] = useState(10751);\n\n    let previousPage = () => {\n        if (kidspageNumber > 1) {\n            setKidsPageNumber(kidspageNumber - 1)\n        }\n    }\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        loadKidsCategory(kidscategoryId)\n    }, [kidspageNumber, kidscategoryId])\n\n    let loadKidsCategory = async (genreId) => {\n        /*console.log('Kategori', kidspageNumber);*/\n        let url = `https://api.themoviedb.org/3/genre/10751/movies?api_key=86f237d170416093156de7affa43927e&sort_by=vote_count.desc&include_adult=false&include_video=false&page=${kidspageNumber}&with_genres=${genreId}`;\n        let kidscategoryMovies = await GetData(url);\n        if (kidscategoryMovies != null) {\n            setKidsCategoryList(\n                kidscategoryMovies.results\n            );\n        }\n        console.log('results: ', kidscategoryMovies.results);\n        console.log('loadCategory: ', kidscategoryMovies);\n    }\n\n    let kidsmoviesCategoryList = kidscategoryList.map((category, index) => {\n        return (\n            kidscategoryList != [] ?\n                <div key={index} className=\"pages-categories\">\n                    <Link to={`/filminfo/${category.id}`}>\n                        {category.poster_path ?\n                            <img src={`https://image.tmdb.org/t/p/w500${category.poster_path}`} className=\"pages-poster\" alt=\"\" />\n                            :\n                            <img src=\"img/no-poster.png\" alt=\"\" />\n                        }\n                    </Link>\n                    <p>{category.title}</p>\n                </div>\n                :\n                <p key={index}>No data</p>\n        )\n    })\n\n    return (\n        <section className=\"pages-content\">\n            <div className=\"pages-category\">\n                <h1 className=\"pages-h1\">Barnfilmer</h1>\n            </div>\n            <div className=\"pages-grid-container\">\n                <div className=\"pages-grid\">\n                    {kidsmoviesCategoryList}\n                </div>\n            </div>\n            <div className=\"change-page-buttons\">\n                <div className=\"change-page-div\">\n                    <div className=\"change-page-button\" onClick={() =>\n                        previousPage()}>\n                        <IconButton aria-label=\"arrowback\"><ArrowBackIcon style={{ fill: '#000000' }} /></IconButton>\n                    </div>\n                </div>\n                <div className=\"change-page-div\">\n                    <div className=\"change-page-button\" onClick={() =>\n                        setKidsPageNumber(kidspageNumber + 1)}>\n                        <IconButton aria-label=\"arrowforward\"><ArrowForwardIcon style={{ fill: '#000000' }} /></IconButton>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default KidsMovies;\n","import './receipt.css'\nimport React from 'react'\nimport { useSelector } from 'react-redux';\n\nconst Receipt = () => {\n\n     // Redux\n     const movies = useSelector(state => state.cart.movies);\n     const price = useSelector(state => state.cart.price);\n     const total = useSelector(state => state.cart.total);\n     const email = useSelector(state => state.cart.email);\n \n     const cartElements = movies.map((movie, index) => (\n         <div className=\"receipt-row\" key={index}>\n             <img src={movie.image} alt={movie.title} />\n             <p>{movie.title}</p>\n             <div className=\"receipt-price\">{price} kr</div>\n         </div>\n     ));\n \n     return (\n \n         <div className=\"receipt-content\">\n             <section className=\"receipt-container\">\n \n                 <h1 className=\"receipt-h1\">Kvitto</h1>\n\n                 {cartElements}\n \n                 <div className=\"receipt-finish-row\">\n                     <p>Summa: {total} kr</p>\n                </div>\n                <p>Tack för ditt köp!</p>\n                <p>Kvittot har skickats till din email: {email}</p>\n \n             </section>\n\n         </div>\n     )\n}\n\nexport default Receipt;","import React from 'react'\nimport ReactDom from 'react-dom'\nimport { Link } from 'react-router-dom'\nimport './modal.css'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../features/cart';\n\n\nfunction Modal({ open, onClose }) {\n\n    const movies = useSelector(state => state.cart.movies);\n    const price = useSelector(state => state.cart.price);\n    const total = useSelector(state => state.cart.total);\n\n    const dispatch = useDispatch();\n\n    const removeItem = (title) => {\n        dispatch(actions.removeFromCart(title));\n    } \n\n    const modalElements = movies.map((movie, index) => (\n        <div className=\"modal-row\" key={index}>\n            <div className=\"modal-title\">\n                <p>{movie.title}</p>\n            </div>\n            <div className=\"modal-price\"><p>{price} kr</p></div>\n            <aside className=\"delete-button\" onClick={() => removeItem(movie.title)}><IconButton aria-label=\"delete\"><DeleteForeverIcon style={{ fill: '#000000' }} /></IconButton></aside>\n        </div>\n    ));\n\n    if (!open) return null\n    return ReactDom.createPortal(\n        <>\n            <div className=\"overlay-styles\" onClick={() => console.log('clicked')} />\n            <div className=\"modal-styles\">\n                <Link to=\"../shoppingcart\"><button classname=\"modal-cart\" id=\"modal-cart-btn\" onClick={onClose}>Till kassan</button></Link>\n                <button classname=\"close-cart\" id=\"close-cart-btn\" onClick={onClose}>&#10006;</button>\n\n                <div className=\"modal-content\">\n                    <section className=\"modal-container\">\n                        <div className=\"modal-column\">\n                            <div className=\"modal-h1-div\"><h1 className=\"modal-h1\">Varukorg</h1></div>\n                            {modalElements}\n                        </div>\n\n                        <div className=\"modal-finish-row\">\n                            <p>Summa: {total} kr</p>\n                        </div>\n                    </section>\n                </div>\n            </div>\n        </>,\n        document.getElementById('portal')\n    )\n}\n\nexport default Modal;","import './App.css';\nimport { Route, HashRouter as Router, Link, Switch } from \"react-router-dom\";\nimport StartScreen from './components/StartScreen';\nimport Filminfo from './components/Filminfo';\nimport Checkout from './components/Checkout';\nimport FilmCategory from './components/FilmCategory';\nimport SearchMovies from './components/SearchMovies';\nimport UpcomingMovies from './components/UpcomingMovies';\nimport KidsMovies from './components/KidsMovies'\nimport Receipt from './components/Receipt'\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport Modal from './components/Modal'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n\n  const [query, setQuery] = useState(\"\")\n  const [isOpen, setIsOpen] = useState(false);\n  const count = useSelector(state => state.cart.count);\n\n  function handleSearch(event) {\n    setQuery(event.target.value)\n  }\n\n  return (\n\n    <div className=\"App\">\n      <Router>\n        <div className=\"app-wrap\">\n          <header className=\"App-header\">\n            <div className=\"nav-bar\" id=\"nav-container\">\n              <Link to=\"/startScreen\"><button className=\"nav-home-button\" id=\"nav-btn-home\">Movieblock</button></Link>\n              <Link to=\"/filmCategory\"><button className=\"nav-button\" id=\"nav-btn-categories\">Kategorier</button></Link>\n              <Link to=\"/kidsmovies\"><button className=\"nav-button\" id=\"nav-btn-movies\">Barnfilmer</button></Link>\n              <Link to=\"/upcoming\"><button className=\"nav-button\" id=\"nav-btn-movies\">Kommande</button></Link>\n              <input id=\"search\" type=\"text\" className=\"search-field\" placeholder=\"Sök\" onChange={handleSearch}></input>\n              <Link to={query != \"\" ? \"/search/\" + query : \"\"}><IconButton aria-label=\"search\"><SearchIcon style={{ fill: '#000000' }} /></IconButton></Link>\n              <div className=\"header-shoppingcart\">\n                <IconButton aria-label=\"shop\"><ShoppingBasketIcon style={{ fill: '#000000' }} onClick={() => setIsOpen(true)} /></IconButton>\n                <Modal open={isOpen} onClose={() => setIsOpen(false)}></Modal>\n                <div className=\"header-counter\" hidden={count === 0}>{count}</div>\n              </div>\n            </div>\n          </header>\n          <main>\n            <div className=\"App\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <StartScreen />\n                </Route>\n                <Route path=\"/startscreen\">\n                  <StartScreen />\n                </Route>\n                <Route path=\"/filmcategory\">\n                  <FilmCategory />\n                </Route>\n                <Route path=\"/kidsmovies\">\n                  <KidsMovies />\n                </Route>\n                <Route path=\"/upcoming\">\n                  <UpcomingMovies />\n                </Route>\n                <Route path=\"/filminfo/:id\">\n                  <Filminfo />\n                </Route>\n                <Route path=\"/search/:query\">\n                  <SearchMovies />\n                </Route>\n                <Route path=\"/shoppingcart\">\n                  <Checkout />\n                </Route>\n                <Route path=\"/receipt\">\n                  <Receipt />\n                </Route>\n              </Switch>\n            </div>\n          </main>\n        </div>\n      </Router>\n      <footer>\n        <div className=\"footer\">\n          <p> © Movieblock AB 2021 support@movieblock.se</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { reducer as cartReducer } from './cart'\n\n\nconst rootReducer = combineReducers({\n    cart: cartReducer\n});\n\nexport { rootReducer };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './features/rootReducer';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nconst store = configureStore({\n  reducer : rootReducer\n});\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 2000,\n  offset: '30px',\n  transition: transitions.SCALE\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n    </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}